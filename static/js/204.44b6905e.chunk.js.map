{"version":3,"file":"static/js/204.44b6905e.chunk.js","mappings":"mUAgGA,EAjFc,WACZ,IAAAA,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAOF,EAAA,GAAEG,EAAQH,EAAA,GACxBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,MA0BXC,EAAiB,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACxC,OAAQD,GACN,IAAK,QACH,OAAOf,EAASgB,GAClB,IAAK,WACH,OAAOZ,EAAYY,GACrB,QACE,OAEN,EAEA,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,SAASC,QAAQ,SAASC,EAAE,OAAMC,UAC5CL,EAAAA,EAAAA,KAACM,EAAAA,GAAG,CAACC,GAAG,UAAUC,EAAG,EAAGC,QAAQ,KAAKC,EAAG,IAAIL,UAC1CL,EAAAA,EAAAA,KAAA,QAAMW,SAtCW,SAAAC,GACrBA,EAAKC,iBACLrB,GAASsB,EAAAA,EAAAA,IAAa,CAAEhC,MAAAA,EAAOI,SAAAA,KAC5B6B,MAAK,SAAAC,GAEJ,GAAe,aADAA,EAASC,KAAKC,cAE3B,MAAM,IAAIC,MAAM,mCAElBpC,EAAS,IACTI,EAAY,IACZC,EAAS,IAAK,CAAEgC,SAAS,GAC3B,IACCC,OAAM,SAAAC,GACL3C,GAAS,GACTW,EAAM,CACJiC,MAAM,GAADC,OAAKF,EAAMG,SAChBC,OAAQ,QACRC,SAAU,MACVC,YAAY,EACZC,SAAU,KAEd,GACJ,EAgBqCxB,UAC7ByB,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,QAAS,EAAG9B,MAAM,aAAYG,SAAA,EACpCyB,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAACC,YAAU,EAACC,UAAWzD,EAAQ2B,SAAA,EACzCL,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAACC,QAAQ,QAAOhC,SAAC,mBAC3BL,EAAAA,EAAAA,KAACsC,EAAAA,EAAK,CACJC,GAAG,QACHzC,KAAK,QACL0C,KAAK,QACLC,QAAQ,SACRC,SAAUhD,EACVK,MAAOjB,QAGXgD,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAACC,YAAU,EAACC,UAAWzD,EAAQ2B,SAAA,EACzCL,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAACC,QAAQ,WAAUhC,SAAC,cAC9BL,EAAAA,EAAAA,KAACsC,EAAAA,EAAK,CACJC,GAAG,WACHzC,KAAK,WACL0C,KAAK,WACLC,QAAQ,SACRC,SAAUhD,EACVK,MAAOb,QAIXc,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CAACH,KAAK,SAASI,YAAY,SAASC,MAAM,OAAOC,IAAE,EAAAzC,SAAC,iBAQvE,C","sources":["pages/login/Login.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n  useToast,\n} from '@chakra-ui/react';\nimport { apiLoginUser } from '../../redux/auth/operations';\n\nconst Login = () => {\n  const [isError, setError] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const toast = useToast();\n  const dispatch = useDispatch();\n\n  const handleOnSubmit = evet => {\n    evet.preventDefault();\n    dispatch(apiLoginUser({ email, password }))\n      .then(response => {\n        const status = response.meta.requestStatus;\n        if (status === 'rejected')\n          throw new Error('Please, check your credentials.');\n\n        setEmail('');\n        setPassword('');\n        navigate('/', { replace: true });\n      })\n      .catch(error => {\n        setError(true);\n        toast({\n          title: `${error.message}`,\n          status: 'error',\n          position: 'top',\n          isClosable: true,\n          duration: 4000,\n        });\n      });\n  };\n\n  const handleOnChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Flex align=\"center\" justify=\"center\" h=\"90vh\">\n      <Box bg=\"#e3cbb7\" p={6} rounded=\"md\" w={500}>\n        <form onSubmit={handleOnSubmit}>\n          <VStack spacing={4} align=\"flex-start\">\n            <FormControl isRequired isInvalid={isError}>\n              <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                variant=\"filled\"\n                onChange={handleOnChange}\n                value={email}\n              />\n            </FormControl>\n            <FormControl isRequired isInvalid={isError}>\n              <FormLabel htmlFor=\"password\">Password</FormLabel>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                variant=\"filled\"\n                onChange={handleOnChange}\n                value={password}\n              />\n            </FormControl>\n\n            <Button type=\"submit\" colorScheme=\"orange\" width=\"full\" pt>\n              Send\n            </Button>\n          </VStack>\n        </form>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Login;\n"],"names":["_useState","useState","_useState2","_slicedToArray","isError","setError","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","navigate","useNavigate","toast","useToast","dispatch","useDispatch","handleOnChange","_ref","_ref$target","target","name","value","_jsx","Flex","align","justify","h","children","Box","bg","p","rounded","w","onSubmit","evet","preventDefault","apiLoginUser","then","response","meta","requestStatus","Error","replace","catch","error","title","concat","message","status","position","isClosable","duration","_jsxs","VStack","spacing","FormControl","isRequired","isInvalid","FormLabel","htmlFor","Input","id","type","variant","onChange","Button","colorScheme","width","pt"],"sourceRoot":""}