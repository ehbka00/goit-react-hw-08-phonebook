{"version":3,"file":"static/js/692.950aa127.chunk.js","mappings":"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","sources":["pages/register/Register.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Box,\n  Button,\n  Flex,\n  useToast,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\nimport { apiRegisterUser } from '../../redux/auth/operations';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isError, setError] = useState(false);\n  const toast = useToast();\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n\n    dispatch(apiRegisterUser({ name, email, password }))\n      .then(response => {\n        const status = response.meta.requestStatus;\n        if (status === 'rejected')\n          throw new Error('Please, check your credentials.');\n\n        setName('');\n        setEmail('');\n        setPassword('');\n      })\n      .catch(error => {\n        setError(true);\n        toast({\n          title: `${error.message}`,\n          status: 'error',\n          position: 'top',\n          isClosable: true,\n          duration: 4000,\n        });\n      });\n  };\n\n  const handleOnChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Flex align=\"center\" justify=\"center\" h=\"90vh\">\n      <Box bg=\"#e3cbb7\" p={6} rounded=\"md\" w={500}>\n        <form onSubmit={handleOnSubmit}>\n          <VStack spacing={4} align=\"flex-start\">\n            <FormControl isRequired isInvalid={isError}>\n              <FormLabel htmlFor=\"name\">Name</FormLabel>\n              <Input\n                id=\"name\"\n                name=\"name\"\n                type=\"name\"\n                variant=\"filled\"\n                onChange={handleOnChange}\n                value={name}\n              />\n            </FormControl>\n            <FormControl isRequired isInvalid={isError}>\n              <FormLabel htmlFor=\"email\">Email address</FormLabel>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                variant=\"filled\"\n                onChange={handleOnChange}\n                value={email}\n              />\n            </FormControl>\n            <FormControl isRequired isInvalid={isError}>\n              <FormLabel htmlFor=\"password\">Password</FormLabel>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                variant=\"filled\"\n                onChange={handleOnChange}\n                value={password}\n              />\n            </FormControl>\n            <Button type=\"submit\" colorScheme=\"orange\" width=\"full\" mt={1}>\n              Send\n            </Button>\n          </VStack>\n        </form>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Register;\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","isError","setError","toast","useToast","handleOnChange","_ref","_ref$target","target","value","_jsx","Flex","align","justify","h","children","Box","bg","p","rounded","w","onSubmit","event","preventDefault","apiRegisterUser","then","response","meta","requestStatus","Error","catch","error","title","concat","message","status","position","isClosable","duration","_jsxs","VStack","spacing","FormControl","isRequired","isInvalid","FormLabel","htmlFor","Input","id","type","variant","onChange","Button","colorScheme","width","mt"],"sourceRoot":""}